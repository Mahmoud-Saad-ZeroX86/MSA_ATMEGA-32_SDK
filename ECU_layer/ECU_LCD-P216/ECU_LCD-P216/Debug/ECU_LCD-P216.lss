
ECU_LCD-P216.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000654  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000654  000006c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000708  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001678  00000000  00000000  000007ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f5  00000000  00000000  00001e64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000941  00000000  00000000  00002759  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000017c  00000000  00000000  0000309c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000813  00000000  00000000  00003218  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000efc  00000000  00000000  00003a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00004927  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 af 02 	call	0x55e	; 0x55e <main>
  7a:	0c 94 28 03 	jmp	0x650	; 0x650 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <set_pin_output>:
	}
	
	
	
	return b_ret_val;
}
  82:	9c 01       	movw	r18, r24
  84:	20 53       	subi	r18, 0x30	; 48
  86:	31 09       	sbc	r19, r1
  88:	2a 30       	cpi	r18, 0x0A	; 10
  8a:	31 05       	cpc	r19, r1
  8c:	78 f4       	brcc	.+30     	; 0xac <set_pin_output+0x2a>
  8e:	68 30       	cpi	r22, 0x08	; 8
  90:	78 f4       	brcc	.+30     	; 0xb0 <set_pin_output+0x2e>
  92:	fc 01       	movw	r30, r24
  94:	41 81       	ldd	r20, Z+1	; 0x01
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	30 e0       	ldi	r19, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <set_pin_output+0x1e>
  9c:	22 0f       	add	r18, r18
  9e:	33 1f       	adc	r19, r19
  a0:	6a 95       	dec	r22
  a2:	e2 f7       	brpl	.-8      	; 0x9c <set_pin_output+0x1a>
  a4:	24 2b       	or	r18, r20
  a6:	21 83       	std	Z+1, r18	; 0x01
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	08 95       	ret
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	08 95       	ret
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	08 95       	ret

000000b4 <set_pin_low>:
#endif

gpio_errors set_pin_low(gpio_bases *base,gpio_pin_no pin_no)
{
	gpio_errors b_ret_val=NO_ERRORS;
	if( (base >= (gpio_bases*) BASE_D) && (base <= (gpio_bases*) BASE_A) && ( (pin_no >= PIN_ZERO) && (pin_no <= PIN_SEVEN) ) )
  b4:	9c 01       	movw	r18, r24
  b6:	20 53       	subi	r18, 0x30	; 48
  b8:	31 09       	sbc	r19, r1
  ba:	2a 30       	cpi	r18, 0x0A	; 10
  bc:	31 05       	cpc	r19, r1
  be:	80 f4       	brcc	.+32     	; 0xe0 <set_pin_low+0x2c>
  c0:	68 30       	cpi	r22, 0x08	; 8
  c2:	80 f4       	brcc	.+32     	; 0xe4 <set_pin_low+0x30>
	{
		(*(volatile msa_u8 *)(base+PORT_OFFSET))&=~(1<<pin_no);
  c4:	fc 01       	movw	r30, r24
  c6:	42 81       	ldd	r20, Z+2	; 0x02
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <set_pin_low+0x1e>
  ce:	22 0f       	add	r18, r18
  d0:	33 1f       	adc	r19, r19
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <set_pin_low+0x1a>
  d6:	20 95       	com	r18
  d8:	24 23       	and	r18, r20
  da:	22 83       	std	Z+2, r18	; 0x02
}
#endif

gpio_errors set_pin_low(gpio_bases *base,gpio_pin_no pin_no)
{
	gpio_errors b_ret_val=NO_ERRORS;
  dc:	80 e0       	ldi	r24, 0x00	; 0
	if( (base >= (gpio_bases*) BASE_D) && (base <= (gpio_bases*) BASE_A) && ( (pin_no >= PIN_ZERO) && (pin_no <= PIN_SEVEN) ) )
	{
		(*(volatile msa_u8 *)(base+PORT_OFFSET))&=~(1<<pin_no);
  de:	08 95       	ret
	}
	else
	{
		b_ret_val=INVALID_PARAMS;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	08 95       	ret
  e4:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	return b_ret_val;
}
  e6:	08 95       	ret

000000e8 <set_pin_high>:
gpio_errors set_pin_high(gpio_bases *base,gpio_pin_no pin_no)
{
	gpio_errors b_ret_val=NO_ERRORS;
	if( (base >= (gpio_bases*) BASE_D) && (base <= (gpio_bases*) BASE_A) && ( (pin_no >= PIN_ZERO) && (pin_no <= PIN_SEVEN) ) )
  e8:	9c 01       	movw	r18, r24
  ea:	20 53       	subi	r18, 0x30	; 48
  ec:	31 09       	sbc	r19, r1
  ee:	2a 30       	cpi	r18, 0x0A	; 10
  f0:	31 05       	cpc	r19, r1
  f2:	78 f4       	brcc	.+30     	; 0x112 <set_pin_high+0x2a>
  f4:	68 30       	cpi	r22, 0x08	; 8
  f6:	78 f4       	brcc	.+30     	; 0x116 <set_pin_high+0x2e>
	{
		(*(volatile msa_u8 *)(base+PORT_OFFSET))|=(1<<pin_no);
  f8:	fc 01       	movw	r30, r24
  fa:	42 81       	ldd	r20, Z+2	; 0x02
  fc:	21 e0       	ldi	r18, 0x01	; 1
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	02 c0       	rjmp	.+4      	; 0x106 <set_pin_high+0x1e>
 102:	22 0f       	add	r18, r18
 104:	33 1f       	adc	r19, r19
 106:	6a 95       	dec	r22
 108:	e2 f7       	brpl	.-8      	; 0x102 <set_pin_high+0x1a>
 10a:	24 2b       	or	r18, r20
 10c:	22 83       	std	Z+2, r18	; 0x02
	
	return b_ret_val;
}
gpio_errors set_pin_high(gpio_bases *base,gpio_pin_no pin_no)
{
	gpio_errors b_ret_val=NO_ERRORS;
 10e:	80 e0       	ldi	r24, 0x00	; 0
	if( (base >= (gpio_bases*) BASE_D) && (base <= (gpio_bases*) BASE_A) && ( (pin_no >= PIN_ZERO) && (pin_no <= PIN_SEVEN) ) )
	{
		(*(volatile msa_u8 *)(base+PORT_OFFSET))|=(1<<pin_no);
 110:	08 95       	ret
	}
	else
	{
		b_ret_val=INVALID_PARAMS;
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	08 95       	ret
 116:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	return b_ret_val;
}
 118:	08 95       	ret

0000011a <lcd_comm_out>:
	else
	{
		ret_val=INVALID_LCD_PARAMS;
	}
	return ret_val;
}
 11a:	0f 93       	push	r16
 11c:	1f 93       	push	r17
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	00 97       	sbiw	r24, 0x00	; 0
 124:	09 f4       	brne	.+2      	; 0x128 <lcd_comm_out+0xe>
 126:	b9 c0       	rjmp	.+370    	; 0x29a <lcd_comm_out+0x180>
 128:	0f ef       	ldi	r16, 0xFF	; 255
 12a:	06 0f       	add	r16, r22
 12c:	00 3c       	cpi	r16, 0xC0	; 192
 12e:	08 f0       	brcs	.+2      	; 0x132 <lcd_comm_out+0x18>
 130:	b6 c0       	rjmp	.+364    	; 0x29e <lcd_comm_out+0x184>
 132:	fc 01       	movw	r30, r24
 134:	26 81       	ldd	r18, Z+6	; 0x06
 136:	21 30       	cpi	r18, 0x01	; 1
 138:	09 f0       	breq	.+2      	; 0x13c <lcd_comm_out+0x22>
 13a:	b3 c0       	rjmp	.+358    	; 0x2a2 <lcd_comm_out+0x188>
 13c:	16 2f       	mov	r17, r22
 13e:	ec 01       	movw	r28, r24
 140:	82 81       	ldd	r24, Z+2	; 0x02
 142:	63 81       	ldd	r22, Z+3	; 0x03
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 14a:	89 81       	ldd	r24, Y+1	; 0x01
 14c:	84 30       	cpi	r24, 0x04	; 4
 14e:	51 f4       	brne	.+20     	; 0x164 <lcd_comm_out+0x4a>
 150:	e8 81       	ld	r30, Y
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	82 81       	ldd	r24, Z+2	; 0x02
 156:	98 2f       	mov	r25, r24
 158:	9f 70       	andi	r25, 0x0F	; 15
 15a:	81 2f       	mov	r24, r17
 15c:	80 7f       	andi	r24, 0xF0	; 240
 15e:	89 2b       	or	r24, r25
 160:	82 83       	std	Z+2, r24	; 0x02
 162:	33 c0       	rjmp	.+102    	; 0x1ca <lcd_comm_out+0xb0>
 164:	83 30       	cpi	r24, 0x03	; 3
 166:	51 f4       	brne	.+20     	; 0x17c <lcd_comm_out+0x62>
 168:	e8 81       	ld	r30, Y
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	82 81       	ldd	r24, Z+2	; 0x02
 16e:	91 2f       	mov	r25, r17
 170:	90 7f       	andi	r25, 0xF0	; 240
 172:	96 95       	lsr	r25
 174:	87 78       	andi	r24, 0x87	; 135
 176:	89 2b       	or	r24, r25
 178:	82 83       	std	Z+2, r24	; 0x02
 17a:	27 c0       	rjmp	.+78     	; 0x1ca <lcd_comm_out+0xb0>
 17c:	82 30       	cpi	r24, 0x02	; 2
 17e:	59 f4       	brne	.+22     	; 0x196 <lcd_comm_out+0x7c>
 180:	e8 81       	ld	r30, Y
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	82 81       	ldd	r24, Z+2	; 0x02
 186:	91 2f       	mov	r25, r17
 188:	90 7f       	andi	r25, 0xF0	; 240
 18a:	96 95       	lsr	r25
 18c:	96 95       	lsr	r25
 18e:	83 7c       	andi	r24, 0xC3	; 195
 190:	89 2b       	or	r24, r25
 192:	82 83       	std	Z+2, r24	; 0x02
 194:	1a c0       	rjmp	.+52     	; 0x1ca <lcd_comm_out+0xb0>
 196:	81 30       	cpi	r24, 0x01	; 1
 198:	61 f4       	brne	.+24     	; 0x1b2 <lcd_comm_out+0x98>
 19a:	e8 81       	ld	r30, Y
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	82 81       	ldd	r24, Z+2	; 0x02
 1a0:	91 2f       	mov	r25, r17
 1a2:	90 7f       	andi	r25, 0xF0	; 240
 1a4:	96 95       	lsr	r25
 1a6:	96 95       	lsr	r25
 1a8:	96 95       	lsr	r25
 1aa:	81 7e       	andi	r24, 0xE1	; 225
 1ac:	89 2b       	or	r24, r25
 1ae:	82 83       	std	Z+2, r24	; 0x02
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <lcd_comm_out+0xb0>
 1b2:	81 11       	cpse	r24, r1
 1b4:	0a c0       	rjmp	.+20     	; 0x1ca <lcd_comm_out+0xb0>
 1b6:	e8 81       	ld	r30, Y
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	82 81       	ldd	r24, Z+2	; 0x02
 1bc:	98 2f       	mov	r25, r24
 1be:	90 7f       	andi	r25, 0xF0	; 240
 1c0:	81 2f       	mov	r24, r17
 1c2:	82 95       	swap	r24
 1c4:	8f 70       	andi	r24, 0x0F	; 15
 1c6:	89 2b       	or	r24, r25
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	8a 81       	ldd	r24, Y+2	; 0x02
 1cc:	6d 81       	ldd	r22, Y+5	; 0x05
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 74 00 	call	0xe8	; 0xe8 <set_pin_high>
 1d4:	00 00       	nop
 1d6:	8a 81       	ldd	r24, Y+2	; 0x02
 1d8:	6d 81       	ldd	r22, Y+5	; 0x05
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 1e0:	f6 e0       	ldi	r31, 0x06	; 6
 1e2:	fa 95       	dec	r31
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <lcd_comm_out+0xc8>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <lcd_comm_out+0xce>
 1e8:	89 81       	ldd	r24, Y+1	; 0x01
 1ea:	84 30       	cpi	r24, 0x04	; 4
 1ec:	61 f4       	brne	.+24     	; 0x206 <lcd_comm_out+0xec>
 1ee:	e8 81       	ld	r30, Y
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	62 81       	ldd	r22, Z+2	; 0x02
 1f4:	86 2f       	mov	r24, r22
 1f6:	8f 70       	andi	r24, 0x0F	; 15
 1f8:	90 e1       	ldi	r25, 0x10	; 16
 1fa:	19 9f       	mul	r17, r25
 1fc:	b0 01       	movw	r22, r0
 1fe:	11 24       	eor	r1, r1
 200:	68 2b       	or	r22, r24
 202:	62 83       	std	Z+2, r22	; 0x02
 204:	30 c0       	rjmp	.+96     	; 0x266 <lcd_comm_out+0x14c>
 206:	83 30       	cpi	r24, 0x03	; 3
 208:	61 f4       	brne	.+24     	; 0x222 <lcd_comm_out+0x108>
 20a:	e8 81       	ld	r30, Y
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	82 81       	ldd	r24, Z+2	; 0x02
 210:	61 2f       	mov	r22, r17
 212:	6f 70       	andi	r22, 0x0F	; 15
 214:	66 0f       	add	r22, r22
 216:	66 0f       	add	r22, r22
 218:	66 0f       	add	r22, r22
 21a:	87 78       	andi	r24, 0x87	; 135
 21c:	68 2b       	or	r22, r24
 21e:	62 83       	std	Z+2, r22	; 0x02
 220:	22 c0       	rjmp	.+68     	; 0x266 <lcd_comm_out+0x14c>
 222:	82 30       	cpi	r24, 0x02	; 2
 224:	59 f4       	brne	.+22     	; 0x23c <lcd_comm_out+0x122>
 226:	e8 81       	ld	r30, Y
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	82 81       	ldd	r24, Z+2	; 0x02
 22c:	61 2f       	mov	r22, r17
 22e:	6f 70       	andi	r22, 0x0F	; 15
 230:	66 0f       	add	r22, r22
 232:	66 0f       	add	r22, r22
 234:	83 7c       	andi	r24, 0xC3	; 195
 236:	86 2b       	or	r24, r22
 238:	82 83       	std	Z+2, r24	; 0x02
 23a:	15 c0       	rjmp	.+42     	; 0x266 <lcd_comm_out+0x14c>
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	51 f4       	brne	.+20     	; 0x254 <lcd_comm_out+0x13a>
 240:	e8 81       	ld	r30, Y
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	82 81       	ldd	r24, Z+2	; 0x02
 246:	61 2f       	mov	r22, r17
 248:	6f 70       	andi	r22, 0x0F	; 15
 24a:	66 0f       	add	r22, r22
 24c:	81 7e       	andi	r24, 0xE1	; 225
 24e:	86 2b       	or	r24, r22
 250:	82 83       	std	Z+2, r24	; 0x02
 252:	09 c0       	rjmp	.+18     	; 0x266 <lcd_comm_out+0x14c>
 254:	e8 81       	ld	r30, Y
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	62 81       	ldd	r22, Z+2	; 0x02
 25a:	86 2f       	mov	r24, r22
 25c:	80 7f       	andi	r24, 0xF0	; 240
 25e:	61 2f       	mov	r22, r17
 260:	6f 70       	andi	r22, 0x0F	; 15
 262:	68 2b       	or	r22, r24
 264:	62 83       	std	Z+2, r22	; 0x02
 266:	8a 81       	ldd	r24, Y+2	; 0x02
 268:	6d 81       	ldd	r22, Y+5	; 0x05
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 74 00 	call	0xe8	; 0xe8 <set_pin_high>
 270:	00 00       	nop
 272:	8a 81       	ldd	r24, Y+2	; 0x02
 274:	6d 81       	ldd	r22, Y+5	; 0x05
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 27c:	02 30       	cpi	r16, 0x02	; 2
 27e:	40 f4       	brcc	.+16     	; 0x290 <lcd_comm_out+0x176>
 280:	e3 ef       	ldi	r30, 0xF3	; 243
 282:	f1 e0       	ldi	r31, 0x01	; 1
 284:	31 97       	sbiw	r30, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <lcd_comm_out+0x16a>
 288:	00 c0       	rjmp	.+0      	; 0x28a <lcd_comm_out+0x170>
 28a:	00 00       	nop
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0a c0       	rjmp	.+20     	; 0x2a4 <lcd_comm_out+0x18a>
 290:	f8 e2       	ldi	r31, 0x28	; 40
 292:	fa 95       	dec	r31
 294:	f1 f7       	brne	.-4      	; 0x292 <lcd_comm_out+0x178>
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	05 c0       	rjmp	.+10     	; 0x2a4 <lcd_comm_out+0x18a>
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <lcd_comm_out+0x18a>
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	01 c0       	rjmp	.+2      	; 0x2a4 <lcd_comm_out+0x18a>
 2a2:	82 e0       	ldi	r24, 0x02	; 2
 2a4:	df 91       	pop	r29
 2a6:	cf 91       	pop	r28
 2a8:	1f 91       	pop	r17
 2aa:	0f 91       	pop	r16
 2ac:	08 95       	ret

000002ae <lcd_init>:
 2ae:	af 92       	push	r10
 2b0:	bf 92       	push	r11
 2b2:	cf 92       	push	r12
 2b4:	ef 92       	push	r14
 2b6:	0f 93       	push	r16
 2b8:	cf 93       	push	r28
 2ba:	00 97       	sbiw	r24, 0x00	; 0
 2bc:	09 f4       	brne	.+2      	; 0x2c0 <lcd_init+0x12>
 2be:	5e c0       	rjmp	.+188    	; 0x37c <lcd_init+0xce>
 2c0:	30 ed       	ldi	r19, 0xD0	; 208
 2c2:	36 0f       	add	r19, r22
 2c4:	3a 30       	cpi	r19, 0x0A	; 10
 2c6:	08 f0       	brcs	.+2      	; 0x2ca <lcd_init+0x1c>
 2c8:	5b c0       	rjmp	.+182    	; 0x380 <lcd_init+0xd2>
 2ca:	30 ed       	ldi	r19, 0xD0	; 208
 2cc:	32 0f       	add	r19, r18
 2ce:	3a 30       	cpi	r19, 0x0A	; 10
 2d0:	08 f0       	brcs	.+2      	; 0x2d4 <lcd_init+0x26>
 2d2:	58 c0       	rjmp	.+176    	; 0x384 <lcd_init+0xd6>
 2d4:	08 30       	cpi	r16, 0x08	; 8
 2d6:	08 f0       	brcs	.+2      	; 0x2da <lcd_init+0x2c>
 2d8:	57 c0       	rjmp	.+174    	; 0x388 <lcd_init+0xda>
 2da:	37 e0       	ldi	r19, 0x07	; 7
 2dc:	3e 15       	cp	r19, r14
 2de:	08 f4       	brcc	.+2      	; 0x2e2 <lcd_init+0x34>
 2e0:	55 c0       	rjmp	.+170    	; 0x38c <lcd_init+0xde>
 2e2:	3c 15       	cp	r19, r12
 2e4:	08 f4       	brcc	.+2      	; 0x2e8 <lcd_init+0x3a>
 2e6:	54 c0       	rjmp	.+168    	; 0x390 <lcd_init+0xe2>
 2e8:	45 30       	cpi	r20, 0x05	; 5
 2ea:	08 f0       	brcs	.+2      	; 0x2ee <lcd_init+0x40>
 2ec:	53 c0       	rjmp	.+166    	; 0x394 <lcd_init+0xe6>
 2ee:	c4 2f       	mov	r28, r20
 2f0:	5c 01       	movw	r10, r24
 2f2:	fc 01       	movw	r30, r24
 2f4:	60 83       	st	Z, r22
 2f6:	22 83       	std	Z+2, r18	; 0x02
 2f8:	c5 82       	std	Z+5, r12	; 0x05
 2fa:	03 83       	std	Z+3, r16	; 0x03
 2fc:	e4 82       	std	Z+4, r14	; 0x04
 2fe:	41 83       	std	Z+1, r20	; 0x01
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	86 83       	std	Z+6, r24	; 0x06
 304:	6c 2d       	mov	r22, r12
 306:	82 2f       	mov	r24, r18
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 41 00 	call	0x82	; 0x82 <set_pin_output>
 30e:	f5 01       	movw	r30, r10
 310:	82 81       	ldd	r24, Z+2	; 0x02
 312:	60 2f       	mov	r22, r16
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 41 00 	call	0x82	; 0x82 <set_pin_output>
 31a:	f5 01       	movw	r30, r10
 31c:	82 81       	ldd	r24, Z+2	; 0x02
 31e:	6e 2d       	mov	r22, r14
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 41 00 	call	0x82	; 0x82 <set_pin_output>
 326:	87 e8       	ldi	r24, 0x87	; 135
 328:	93 e1       	ldi	r25, 0x13	; 19
 32a:	01 97       	sbiw	r24, 0x01	; 1
 32c:	f1 f7       	brne	.-4      	; 0x32a <lcd_init+0x7c>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <lcd_init+0x82>
 330:	00 00       	nop
 332:	f5 01       	movw	r30, r10
 334:	82 81       	ldd	r24, Z+2	; 0x02
 336:	60 2f       	mov	r22, r16
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 33e:	f5 01       	movw	r30, r10
 340:	82 81       	ldd	r24, Z+2	; 0x02
 342:	6e 2d       	mov	r22, r14
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 34a:	04 e0       	ldi	r16, 0x04	; 4
 34c:	0c 0f       	add	r16, r28
 34e:	f5 01       	movw	r30, r10
 350:	80 81       	ld	r24, Z
 352:	6c 2f       	mov	r22, r28
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	0e 94 41 00 	call	0x82	; 0x82 <set_pin_output>
 35a:	cf 5f       	subi	r28, 0xFF	; 255
 35c:	0c 13       	cpse	r16, r28
 35e:	f7 cf       	rjmp	.-18     	; 0x34e <lcd_init+0xa0>
 360:	63 e3       	ldi	r22, 0x33	; 51
 362:	c5 01       	movw	r24, r10
 364:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_comm_out>
 368:	62 e3       	ldi	r22, 0x32	; 50
 36a:	c5 01       	movw	r24, r10
 36c:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_comm_out>
 370:	68 e2       	ldi	r22, 0x28	; 40
 372:	c5 01       	movw	r24, r10
 374:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_comm_out>
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	0d c0       	rjmp	.+26     	; 0x396 <lcd_init+0xe8>
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	0b c0       	rjmp	.+22     	; 0x396 <lcd_init+0xe8>
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	09 c0       	rjmp	.+18     	; 0x396 <lcd_init+0xe8>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	07 c0       	rjmp	.+14     	; 0x396 <lcd_init+0xe8>
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	05 c0       	rjmp	.+10     	; 0x396 <lcd_init+0xe8>
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	03 c0       	rjmp	.+6      	; 0x396 <lcd_init+0xe8>
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	01 c0       	rjmp	.+2      	; 0x396 <lcd_init+0xe8>
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	cf 91       	pop	r28
 398:	0f 91       	pop	r16
 39a:	ef 90       	pop	r14
 39c:	cf 90       	pop	r12
 39e:	bf 90       	pop	r11
 3a0:	af 90       	pop	r10
 3a2:	08 95       	ret

000003a4 <lcd_data_out>:
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	00 97       	sbiw	r24, 0x00	; 0
 3ac:	09 f4       	brne	.+2      	; 0x3b0 <lcd_data_out+0xc>
 3ae:	a9 c0       	rjmp	.+338    	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 3b0:	fc 01       	movw	r30, r24
 3b2:	26 81       	ldd	r18, Z+6	; 0x06
 3b4:	21 30       	cpi	r18, 0x01	; 1
 3b6:	09 f0       	breq	.+2      	; 0x3ba <lcd_data_out+0x16>
 3b8:	a6 c0       	rjmp	.+332    	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 3ba:	16 2f       	mov	r17, r22
 3bc:	ec 01       	movw	r28, r24
 3be:	82 81       	ldd	r24, Z+2	; 0x02
 3c0:	63 81       	ldd	r22, Z+3	; 0x03
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	0e 94 74 00 	call	0xe8	; 0xe8 <set_pin_high>
 3c8:	89 81       	ldd	r24, Y+1	; 0x01
 3ca:	84 30       	cpi	r24, 0x04	; 4
 3cc:	49 f4       	brne	.+18     	; 0x3e0 <lcd_data_out+0x3c>
 3ce:	e8 81       	ld	r30, Y
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	82 81       	ldd	r24, Z+2	; 0x02
 3d4:	8f 70       	andi	r24, 0x0F	; 15
 3d6:	91 2f       	mov	r25, r17
 3d8:	90 7f       	andi	r25, 0xF0	; 240
 3da:	89 2b       	or	r24, r25
 3dc:	82 83       	std	Z+2, r24	; 0x02
 3de:	33 c0       	rjmp	.+102    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3e0:	83 30       	cpi	r24, 0x03	; 3
 3e2:	51 f4       	brne	.+20     	; 0x3f8 <lcd_data_out+0x54>
 3e4:	e8 81       	ld	r30, Y
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	82 81       	ldd	r24, Z+2	; 0x02
 3ea:	91 2f       	mov	r25, r17
 3ec:	90 7f       	andi	r25, 0xF0	; 240
 3ee:	96 95       	lsr	r25
 3f0:	87 78       	andi	r24, 0x87	; 135
 3f2:	89 2b       	or	r24, r25
 3f4:	82 83       	std	Z+2, r24	; 0x02
 3f6:	27 c0       	rjmp	.+78     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3f8:	82 30       	cpi	r24, 0x02	; 2
 3fa:	59 f4       	brne	.+22     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fc:	e8 81       	ld	r30, Y
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	82 81       	ldd	r24, Z+2	; 0x02
 402:	91 2f       	mov	r25, r17
 404:	90 7f       	andi	r25, 0xF0	; 240
 406:	96 95       	lsr	r25
 408:	96 95       	lsr	r25
 40a:	83 7c       	andi	r24, 0xC3	; 195
 40c:	89 2b       	or	r24, r25
 40e:	82 83       	std	Z+2, r24	; 0x02
 410:	1a c0       	rjmp	.+52     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 412:	81 30       	cpi	r24, 0x01	; 1
 414:	61 f4       	brne	.+24     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 416:	e8 81       	ld	r30, Y
 418:	f0 e0       	ldi	r31, 0x00	; 0
 41a:	82 81       	ldd	r24, Z+2	; 0x02
 41c:	91 2f       	mov	r25, r17
 41e:	90 7f       	andi	r25, 0xF0	; 240
 420:	96 95       	lsr	r25
 422:	96 95       	lsr	r25
 424:	96 95       	lsr	r25
 426:	81 7e       	andi	r24, 0xE1	; 225
 428:	89 2b       	or	r24, r25
 42a:	82 83       	std	Z+2, r24	; 0x02
 42c:	0c c0       	rjmp	.+24     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42e:	81 11       	cpse	r24, r1
 430:	0a c0       	rjmp	.+20     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 432:	e8 81       	ld	r30, Y
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	82 81       	ldd	r24, Z+2	; 0x02
 438:	98 2f       	mov	r25, r24
 43a:	90 7f       	andi	r25, 0xF0	; 240
 43c:	81 2f       	mov	r24, r17
 43e:	82 95       	swap	r24
 440:	8f 70       	andi	r24, 0x0F	; 15
 442:	89 2b       	or	r24, r25
 444:	82 83       	std	Z+2, r24	; 0x02
 446:	8a 81       	ldd	r24, Y+2	; 0x02
 448:	6d 81       	ldd	r22, Y+5	; 0x05
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 74 00 	call	0xe8	; 0xe8 <set_pin_high>
 450:	00 00       	nop
 452:	8a 81       	ldd	r24, Y+2	; 0x02
 454:	6d 81       	ldd	r22, Y+5	; 0x05
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 45c:	f6 e0       	ldi	r31, 0x06	; 6
 45e:	fa 95       	dec	r31
 460:	f1 f7       	brne	.-4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 462:	00 c0       	rjmp	.+0      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 464:	89 81       	ldd	r24, Y+1	; 0x01
 466:	84 30       	cpi	r24, 0x04	; 4
 468:	61 f4       	brne	.+24     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 46a:	e8 81       	ld	r30, Y
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	62 81       	ldd	r22, Z+2	; 0x02
 470:	86 2f       	mov	r24, r22
 472:	8f 70       	andi	r24, 0x0F	; 15
 474:	90 e1       	ldi	r25, 0x10	; 16
 476:	19 9f       	mul	r17, r25
 478:	b0 01       	movw	r22, r0
 47a:	11 24       	eor	r1, r1
 47c:	68 2b       	or	r22, r24
 47e:	62 83       	std	Z+2, r22	; 0x02
 480:	30 c0       	rjmp	.+96     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 482:	83 30       	cpi	r24, 0x03	; 3
 484:	61 f4       	brne	.+24     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 486:	e8 81       	ld	r30, Y
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	82 81       	ldd	r24, Z+2	; 0x02
 48c:	61 2f       	mov	r22, r17
 48e:	6f 70       	andi	r22, 0x0F	; 15
 490:	66 0f       	add	r22, r22
 492:	66 0f       	add	r22, r22
 494:	66 0f       	add	r22, r22
 496:	87 78       	andi	r24, 0x87	; 135
 498:	68 2b       	or	r22, r24
 49a:	62 83       	std	Z+2, r22	; 0x02
 49c:	22 c0       	rjmp	.+68     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 49e:	82 30       	cpi	r24, 0x02	; 2
 4a0:	59 f4       	brne	.+22     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4a2:	e8 81       	ld	r30, Y
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	82 81       	ldd	r24, Z+2	; 0x02
 4a8:	61 2f       	mov	r22, r17
 4aa:	6f 70       	andi	r22, 0x0F	; 15
 4ac:	66 0f       	add	r22, r22
 4ae:	66 0f       	add	r22, r22
 4b0:	83 7c       	andi	r24, 0xC3	; 195
 4b2:	68 2b       	or	r22, r24
 4b4:	62 83       	std	Z+2, r22	; 0x02
 4b6:	15 c0       	rjmp	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4b8:	81 30       	cpi	r24, 0x01	; 1
 4ba:	51 f4       	brne	.+20     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4bc:	e8 81       	ld	r30, Y
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	82 81       	ldd	r24, Z+2	; 0x02
 4c2:	61 2f       	mov	r22, r17
 4c4:	6f 70       	andi	r22, 0x0F	; 15
 4c6:	66 0f       	add	r22, r22
 4c8:	81 7e       	andi	r24, 0xE1	; 225
 4ca:	86 2b       	or	r24, r22
 4cc:	82 83       	std	Z+2, r24	; 0x02
 4ce:	09 c0       	rjmp	.+18     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d0:	e8 81       	ld	r30, Y
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	62 81       	ldd	r22, Z+2	; 0x02
 4d6:	86 2f       	mov	r24, r22
 4d8:	80 7f       	andi	r24, 0xF0	; 240
 4da:	61 2f       	mov	r22, r17
 4dc:	6f 70       	andi	r22, 0x0F	; 15
 4de:	68 2b       	or	r22, r24
 4e0:	62 83       	std	Z+2, r22	; 0x02
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	6d 81       	ldd	r22, Y+5	; 0x05
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 94 74 00 	call	0xe8	; 0xe8 <set_pin_high>
 4ec:	00 00       	nop
 4ee:	8a 81       	ldd	r24, Y+2	; 0x02
 4f0:	6d 81       	ldd	r22, Y+5	; 0x05
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 94 5a 00 	call	0xb4	; 0xb4 <set_pin_low>
 4f8:	e8 e2       	ldi	r30, 0x28	; 40
 4fa:	ea 95       	dec	r30
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4fe:	80 e0       	ldi	r24, 0x00	; 0
 500:	03 c0       	rjmp	.+6      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	01 c0       	rjmp	.+2      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 506:	82 e0       	ldi	r24, 0x02	; 2
 508:	df 91       	pop	r29
 50a:	cf 91       	pop	r28
 50c:	1f 91       	pop	r17
 50e:	08 95       	ret

00000510 <lcd_array_data_out>:

lcd_return_types lcd_array_data_out(g_lcd_t* lcd_obj,msa_u8* lcd_array_data)
{
 510:	ef 92       	push	r14
 512:	ff 92       	push	r15
 514:	0f 93       	push	r16
 516:	1f 93       	push	r17
 518:	cf 93       	push	r28
 51a:	fb 01       	movw	r30, r22
	lcd_return_types ret_val=NO_LCD_ERRORS;
	if ( (lcd_obj != NULL) && (lcd_array_data != NULL) )
 51c:	00 97       	sbiw	r24, 0x00	; 0
 51e:	a1 f0       	breq	.+40     	; 0x548 <lcd_array_data_out+0x38>
 520:	30 97       	sbiw	r30, 0x00	; 0
 522:	a1 f0       	breq	.+40     	; 0x54c <lcd_array_data_out+0x3c>
	{
		msa_u8 char_cntr=0;
		while(lcd_array_data[char_cntr])
 524:	60 81       	ld	r22, Z
 526:	66 23       	and	r22, r22
 528:	99 f0       	breq	.+38     	; 0x550 <lcd_array_data_out+0x40>
 52a:	8f 01       	movw	r16, r30
 52c:	7c 01       	movw	r14, r24
 52e:	c0 e0       	ldi	r28, 0x00	; 0
		{
			lcd_data_out(lcd_obj,lcd_array_data[char_cntr++]);
 530:	cf 5f       	subi	r28, 0xFF	; 255
 532:	c7 01       	movw	r24, r14
 534:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_data_out>
{
	lcd_return_types ret_val=NO_LCD_ERRORS;
	if ( (lcd_obj != NULL) && (lcd_array_data != NULL) )
	{
		msa_u8 char_cntr=0;
		while(lcd_array_data[char_cntr])
 538:	f8 01       	movw	r30, r16
 53a:	ec 0f       	add	r30, r28
 53c:	f1 1d       	adc	r31, r1
 53e:	60 81       	ld	r22, Z
 540:	61 11       	cpse	r22, r1
 542:	f6 cf       	rjmp	.-20     	; 0x530 <lcd_array_data_out+0x20>
	return ret_val;
}

lcd_return_types lcd_array_data_out(g_lcd_t* lcd_obj,msa_u8* lcd_array_data)
{
	lcd_return_types ret_val=NO_LCD_ERRORS;
 544:	80 e0       	ldi	r24, 0x00	; 0
 546:	05 c0       	rjmp	.+10     	; 0x552 <lcd_array_data_out+0x42>
			lcd_data_out(lcd_obj,lcd_array_data[char_cntr++]);
		}
	}
	else
	{
		ret_val=INVALID_LCD_PARAMS;
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	03 c0       	rjmp	.+6      	; 0x552 <lcd_array_data_out+0x42>
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	01 c0       	rjmp	.+2      	; 0x552 <lcd_array_data_out+0x42>
	return ret_val;
}

lcd_return_types lcd_array_data_out(g_lcd_t* lcd_obj,msa_u8* lcd_array_data)
{
	lcd_return_types ret_val=NO_LCD_ERRORS;
 550:	80 e0       	ldi	r24, 0x00	; 0
	else
	{
		ret_val=INVALID_LCD_PARAMS;
	}
	return ret_val;
}
 552:	cf 91       	pop	r28
 554:	1f 91       	pop	r17
 556:	0f 91       	pop	r16
 558:	ff 90       	pop	r15
 55a:	ef 90       	pop	r14
 55c:	08 95       	ret

0000055e <main>:
lcd_return_types lcd_comm_out(g_lcd_t* lcd_obj,lcd_commands_t lcd_command);
lcd_return_types lcd_goto_xy(g_lcd_t* lcd_obj,msa_u8 lcd_x,msa_u8 lcd_y);
lcd_return_types lcd_deinit(g_lcd_t* lcd_obj);
*/
int main(void)
{
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	cd b7       	in	r28, 0x3d	; 61
 564:	de b7       	in	r29, 0x3e	; 62
 566:	64 97       	sbiw	r28, 0x14	; 20
 568:	0f b6       	in	r0, 0x3f	; 63
 56a:	f8 94       	cli
 56c:	de bf       	out	0x3e, r29	; 62
 56e:	0f be       	out	0x3f, r0	; 63
 570:	cd bf       	out	0x3d, r28	; 61
	g_lcd_t lcd_obj_1;
	lcd_init(&lcd_obj_1,BASE_D,PORT_PIN_FOUR,BASE_C,PIN_TWO,PIN_THREE,PIN_FOUR);
 572:	68 94       	set
 574:	cc 24       	eor	r12, r12
 576:	c2 f8       	bld	r12, 2
 578:	0f 2e       	mov	r0, r31
 57a:	f3 e0       	ldi	r31, 0x03	; 3
 57c:	ef 2e       	mov	r14, r31
 57e:	f0 2d       	mov	r31, r0
 580:	02 e0       	ldi	r16, 0x02	; 2
 582:	23 e3       	ldi	r18, 0x33	; 51
 584:	44 e0       	ldi	r20, 0x04	; 4
 586:	60 e3       	ldi	r22, 0x30	; 48
 588:	ce 01       	movw	r24, r28
 58a:	01 96       	adiw	r24, 0x01	; 1
 58c:	0e 94 57 01 	call	0x2ae	; 0x2ae <lcd_init>
	msa_u8 lcd_array_data[13]="Mahmoud Saad";
 590:	8d e0       	ldi	r24, 0x0D	; 13
 592:	e0 e6       	ldi	r30, 0x60	; 96
 594:	f0 e0       	ldi	r31, 0x00	; 0
 596:	de 01       	movw	r26, r28
 598:	18 96       	adiw	r26, 0x08	; 8
 59a:	01 90       	ld	r0, Z+
 59c:	0d 92       	st	X+, r0
 59e:	8a 95       	dec	r24
 5a0:	e1 f7       	brne	.-8      	; 0x59a <main+0x3c>
    while (1) 
    {
	    lcd_data_out(&lcd_obj_1,'M');
 5a2:	6d e4       	ldi	r22, 0x4D	; 77
 5a4:	ce 01       	movw	r24, r28
 5a6:	01 96       	adiw	r24, 0x01	; 1
 5a8:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_data_out>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5ac:	2f e9       	ldi	r18, 0x9F	; 159
 5ae:	86 e8       	ldi	r24, 0x86	; 134
 5b0:	91 e0       	ldi	r25, 0x01	; 1
 5b2:	21 50       	subi	r18, 0x01	; 1
 5b4:	80 40       	sbci	r24, 0x00	; 0
 5b6:	90 40       	sbci	r25, 0x00	; 0
 5b8:	e1 f7       	brne	.-8      	; 0x5b2 <main+0x54>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <main+0x5e>
 5bc:	00 00       	nop
		_delay_ms(500);
	    lcd_data_out(&lcd_obj_1,'S');
 5be:	63 e5       	ldi	r22, 0x53	; 83
 5c0:	ce 01       	movw	r24, r28
 5c2:	01 96       	adiw	r24, 0x01	; 1
 5c4:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_data_out>
 5c8:	2f e9       	ldi	r18, 0x9F	; 159
 5ca:	86 e8       	ldi	r24, 0x86	; 134
 5cc:	91 e0       	ldi	r25, 0x01	; 1
 5ce:	21 50       	subi	r18, 0x01	; 1
 5d0:	80 40       	sbci	r24, 0x00	; 0
 5d2:	90 40       	sbci	r25, 0x00	; 0
 5d4:	e1 f7       	brne	.-8      	; 0x5ce <main+0x70>
 5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <main+0x7a>
 5d8:	00 00       	nop
		_delay_ms(500);
	    lcd_data_out(&lcd_obj_1,'A');
 5da:	61 e4       	ldi	r22, 0x41	; 65
 5dc:	ce 01       	movw	r24, r28
 5de:	01 96       	adiw	r24, 0x01	; 1
 5e0:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_data_out>
 5e4:	2f e9       	ldi	r18, 0x9F	; 159
 5e6:	86 e8       	ldi	r24, 0x86	; 134
 5e8:	91 e0       	ldi	r25, 0x01	; 1
 5ea:	21 50       	subi	r18, 0x01	; 1
 5ec:	80 40       	sbci	r24, 0x00	; 0
 5ee:	90 40       	sbci	r25, 0x00	; 0
 5f0:	e1 f7       	brne	.-8      	; 0x5ea <main+0x8c>
 5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <main+0x96>
 5f4:	00 00       	nop
		_delay_ms(500);
		lcd_comm_out(&lcd_obj_1,CLEAR_SCREEN);
 5f6:	61 e0       	ldi	r22, 0x01	; 1
 5f8:	ce 01       	movw	r24, r28
 5fa:	01 96       	adiw	r24, 0x01	; 1
 5fc:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_comm_out>
 600:	2f e9       	ldi	r18, 0x9F	; 159
 602:	86 e8       	ldi	r24, 0x86	; 134
 604:	91 e0       	ldi	r25, 0x01	; 1
 606:	21 50       	subi	r18, 0x01	; 1
 608:	80 40       	sbci	r24, 0x00	; 0
 60a:	90 40       	sbci	r25, 0x00	; 0
 60c:	e1 f7       	brne	.-8      	; 0x606 <main+0xa8>
 60e:	00 c0       	rjmp	.+0      	; 0x610 <main+0xb2>
 610:	00 00       	nop
		_delay_ms(500);		
		lcd_array_data_out(&lcd_obj_1,lcd_array_data);
 612:	be 01       	movw	r22, r28
 614:	68 5f       	subi	r22, 0xF8	; 248
 616:	7f 4f       	sbci	r23, 0xFF	; 255
 618:	ce 01       	movw	r24, r28
 61a:	01 96       	adiw	r24, 0x01	; 1
 61c:	0e 94 88 02 	call	0x510	; 0x510 <lcd_array_data_out>
 620:	2f e9       	ldi	r18, 0x9F	; 159
 622:	86 e8       	ldi	r24, 0x86	; 134
 624:	91 e0       	ldi	r25, 0x01	; 1
 626:	21 50       	subi	r18, 0x01	; 1
 628:	80 40       	sbci	r24, 0x00	; 0
 62a:	90 40       	sbci	r25, 0x00	; 0
 62c:	e1 f7       	brne	.-8      	; 0x626 <main+0xc8>
 62e:	00 c0       	rjmp	.+0      	; 0x630 <main+0xd2>
 630:	00 00       	nop
		_delay_ms(500);
		lcd_comm_out(&lcd_obj_1,CLEAR_SCREEN);
 632:	61 e0       	ldi	r22, 0x01	; 1
 634:	ce 01       	movw	r24, r28
 636:	01 96       	adiw	r24, 0x01	; 1
 638:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_comm_out>
 63c:	2f e9       	ldi	r18, 0x9F	; 159
 63e:	86 e8       	ldi	r24, 0x86	; 134
 640:	91 e0       	ldi	r25, 0x01	; 1
 642:	21 50       	subi	r18, 0x01	; 1
 644:	80 40       	sbci	r24, 0x00	; 0
 646:	90 40       	sbci	r25, 0x00	; 0
 648:	e1 f7       	brne	.-8      	; 0x642 <main+0xe4>
 64a:	00 c0       	rjmp	.+0      	; 0x64c <main+0xee>
 64c:	00 00       	nop
 64e:	a9 cf       	rjmp	.-174    	; 0x5a2 <main+0x44>

00000650 <_exit>:
 650:	f8 94       	cli

00000652 <__stop_program>:
 652:	ff cf       	rjmp	.-2      	; 0x652 <__stop_program>
